import { createSlice } from "@reduxjs/toolkit"
import { putOnBoard } from "./boardSlice"

const initialState = {
  bag: [
    "gold",
    "gold",
    "gold",
    "pearl",
    "pearl",
    "black",
    "black",
    "black",
    "black",
    "blue",
    "blue",
    "blue",
    "blue",
    "red",
    "red",
    "red",
    "red",
    "green",
    "green",
    "green",
    "green",
    "white",
    "white",
    "white",
    "white",
  ],
  status: "notEmpty",
}

export const bagSlice = createSlice({
  name: "bag",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    emptyBag: (state) => {
      state.status = "empty"
      state.bag = []
    },

    fillBoard: (state) => {
      putOnBoard()
      //not used
    },
    addToBag: (state, x) => {
      console.log(x.payload)
      for (let i = 0; i < x.payload.length; i++) {
        state.bag.push(x.payload[i])
      }
      if (x.payload.length > 0) {
        state.status = "notEmpty"
      }
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: () => {},
})

export const { emptyBag, fillBoard, addToBag } = bagSlice.actions

// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`
export const getAllJewels = (state) => state.bag.bag
export const getCount = (state) => state.bag.bag.length

export default bagSlice.reducer
